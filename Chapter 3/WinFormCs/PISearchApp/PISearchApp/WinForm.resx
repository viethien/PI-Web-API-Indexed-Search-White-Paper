<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAQAAAAAAAoAQAANgAAACAgEAAAAAAA6AIAAF4BAAAwMBAAAAAAAGgGAABGBAAAKAAAABAA
        AAAgAAAAAQAEAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACoYSAApndMALSMZwDGl2wAh4eGAKaa
        jgCvr64A0rOXAMCzqADRwrQA0M7MAOfazgDs4NYA9/b1AAAAAAAAAHcHcAAAAAAO0Hd3AAAAAO2COXDr
        AAAB3BGNDrp3AAHEGNDrt3ZQEYQbtBEmZVAROBtBERFVVRgdGSERESVVFOMmIRERFVURjqIxERESVQEY
        7sERERFVARFN7kEREVAAERFO5BERUAABERGOIREAAAARERPhEAAAAAAREUAAAPJ////kP///wE///4CD
        //+BAf//AAH//wAA//8AAP//AAD//wAA//+AAP//gAH//8AB///gA///8Af///wf//8oAAAAIAAAAEAA
        AAABAAQAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKlhIACneEwAtYliAMOWbQCHh4cAqZqMALii
        jgCvr64Az7WeANLDtQDgybMA0dDPAOfZzADs4dcA9PTzAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAOzMqI
        AAAAAAAAAAAA/gAO7MyoiIAAAAAAAAAAD+8A7szKiIgAAAAAAAAAAA7wCqrMqIiAAAAAAAAAAADf8DER
        EniIAP7MwAAAAAABv/kRESrtoA/syoiAAAAAEd/0ERPvAAD+zKiIiAAAARG/8hEe7gAP7MqIiGZQAAER
        n+IRTu4At0eIiIZlVQAREU/iEa7sohEREmhmVVUAEREe4xHMyREREREWZVVVUBERGcQRrMIREREREVVV
        VVARERPJEZyRERERERElVVVQERIRmhF6QRERERERElVVVREXESgxOjERERERERFVVVUBEqIXYSgxERER
        ERERJVVVARGdQmIYMRERERERERVVVQERHf2tFmEREREREREVVVUAERLv/5PiERERERERElVVABERLv//
        +xERERERERJVUAABERG////kERERERESVVAAARERE+///+IRERERElUAAAAREREU7///MRERERJVAAAA
        ARERERTv//IRERESUAAAAAARERERFP/+ERERFgAAAAAAAREREREZ/3ERERAAAAAAAAARERERET/xEREA
        AAAAAAAAABERERES1xEQAAAAAAAAAAAAERERERkRAAAAAAAAAAAAAAAREREZAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA//////54D//84Af/+MAP//mAH//xADB/4ABgH8ADwA+AA4AHgAMAAwAAAAMAAAABAAAAAQAA
        AAEAAAAAAAAAAIAAAACAAAAAgAAAAMAAAADAAAAB4AAAAeAAAAPwAAAD+AAAB/wAAA/+AAAf/wAAP//A
        AH//8AD///wD//////8oAAAAMAAAAGAAAAABAAQAAAAAAIAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKlh
        HwChd1EAtIhgAMSWawCHh4cArpuKALSjlACvr68AzLCXANjFswDS0dEA5NjMAPDk2gD08/MAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADd27sAAAAAAAAAAAAAAAAAAAAAAO4AAA3bu7u4
        gAAAAAAAAAAAAAAAAAAADtAAAN3Lu7uIiIAAAAAAAAAAAAAAAAAA7QAADdy7u7iIiHgAAAAAAAAAAAAA
        AAAO0AAA3cu7u4iIh4AAAAAAAAAAAAAAAADt4AAN3Lu7uoiIeAAAAAAAAAAAAAAAAA7eAADdy7u7qIiI
        gAAAAAAAAAAAAAAAAO3uAAMSNHq6iIiIAA67uwAAAAAAAAAAAU7uADERERETeIiAAO27u4iAAAAAAAAA
        EZ7uABERERKaqXgADty7uoiIAAAAAAABEZ7uAxEREZ3uAAAA7cu7qIiIgAAAAAAREa7uARERGe3eAAAO
        3Lu6iIiIdgAAAAAREa7uwRERPd3QAADt27uoiIiHZlAAAAEREZ7uoRERzd3QAA7du7uIiIh2ZVUAAAER
        EU7toRET3d3QAMlDRoiIiIdmVVVQAAERES7doREX3cuwARERERJ4iHZlVVVQABERERzdsREZu7uxERER
        ERETd2ZVVVVVABERERndsREau7thERERERERJmVVVVVVABERERLbshEau7oRERERERERElVVVVVVUBER
        ERGrsxEau7MRERERERERESVVVVVVUBERERFLtxEZu7ERERERERERERVVVVVVUBERIREauhEWu4ERERER
        ERERERJVVVVVVRERMhEUuCETunERERERERERERElVVVVVRERGBERiGESiGEREREREREREREVVVVVVRER
        GaEROIERiGERERERERERERESVVVVVQERErshF4IRaGERERERERERERERVVVVVQEREXvJEoYROHERERER
        ERERERERJVVVVQERERvdxDtBGIERERERERERERERJVVVVQARERLe7t7RFoQRERERERERERERFVVVVQAR
        ERE97u7qM7wRERERERERERERFVVVUAABERET7u7u7e4xERERERERERERElVVUAABERERPe7u7u7CERER
        ERERERERElVVUAAAEREREa7u7u7uohERERERERERElVVAAAAERERERTe7u7u7pERERERERERElVVAAAA
        AREREREZ7u7u7u0hERERERERElVQAAAAABERERERGe7u7u7jERERERERElVQAAAAAAERERERERnu7u7u
        IRERERERElUAAAAAAAAREREREREZ7u7u0RERERERFVAAAAAAAAABERERERERGu7u6hERERERFQAAAAAA
        AAAAERERERERET3u7kERERERMAAAAAAAAAAAARERERERERGe7tERERERAAAAAAAAAAAAABERERERERET
        3uQREREQAAAAAAAAAAAAAAARERERERERGu0REREAAAAAAAAAAAAAAAABEREREREREZ5BERAAAAAAAAAA
        AAAAAAAAARERERERERShEQAAAAAAAAAAAAAAAAAAAAARERERERFDAAAAAAAAAAAAAAAAAAAAAAAAABER
        ERAAAAAAAAAAAP/////////////wP///////8+AH///////nwAH//////8+AAP//////nwAB//////8e
        AAP//////jwAB//////8OAAOD/////gwABwB////8DAAOAD////gIAPwAH///8AgA+AAP///wAAHwAAf
        //+AAAeAAA///4AABwAAB///gAAGAAAH//8AAAAAAAP//wAAAAAAA///AAAAAAAB//8AAAAAAAH//wAA
        AAAAAf//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//+AAAAAAAD//4AAAAAAAP//gAAAAAAA
        ///AAAAAAAD//8AAAAAAAf//4AAAAAAB///gAAAAAAH///AAAAAAA///8AAAAAAD///4AAAAAAf///wA
        AAAAB////gAAAAAP////AAAAAB////+AAAAAP////8AAAAB/////4AAAAP/////wAAAB//////wAAAP/
        /////gAAB///////gAAP///////wAD////////8B/////w==
</value>
  </data>
</root>